name: Deploy to github pages
on:
  workflow_dispatch:
  push:
    branches: [main]
  schedule:
    - cron: "0 0 * * 0" # weekly

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout repo
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup Pages
      uses: actions/configure-pages@v5

    - name: Get data
      env:
        SSH_KEY_FOR_BOOKS: ${{ secrets.SSH_BOOKS_KEY }}
        SSH_KEY_FOR_MEALS: ${{ secrets.SSH_MEALS_KEY }}
      # need to do this for multiple keys: https://docs.github.com/en/authentication/connecting-to-github-with-ssh/managing-deploy-keys#using-multiple-repositories-on-one-server
      run: |
        mkdir $HOME/.ssh
        cp .github/sshconfig $HOME/.ssh/config
        echo "$SSH_KEY_FOR_BOOKS" > $HOME/.ssh/books_deploy_key
        chmod 600 $HOME/.ssh/books_deploy_key
        echo "$SSH_KEY_FOR_MEALS" > $HOME/.ssh/meals_deploy_key
        chmod 600 $HOME/.ssh/meals_deploy_key
        mkdir data
        git clone git@github.com-meals:billbrod/meals data/meals
        cp data/meals/dinner.csv content/apps/meal-calendar/data/dinner.csv
        git clone git@github.com-books:billbrod/book-tracking data/books
        cp data/books/books.csv content/apps/book-visualization/books.csv

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install python dependencies
      run: pip install -r requirements.txt

    - name: Build site
      run: pelican content -o _site/ -s publishconf.py -D

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
